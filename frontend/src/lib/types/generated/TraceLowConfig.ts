// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { BackgroundRemovalAlgorithm } from "./BackgroundRemovalAlgorithm";
import type { ColorSamplingMethod } from "./ColorSamplingMethod";
import type { DotShape } from "./DotShape";
import type { GridPattern } from "./GridPattern";
import type { SuperpixelInitPattern } from "./SuperpixelInitPattern";
import type { TraceBackend } from "./TraceBackend";

/**
 * Configuration for trace-low algorithms
 */
export type TraceLowConfig = { 
/**
 * Selected tracing backend
 */
backend: TraceBackend, 
/**
 * Detail level (0.0 = very sparse, 1.0 = more detail)
 */
detail: number, 
/**
 * Stroke width at 1080p reference resolution
 */
stroke_px_at_1080p: number, 
/**
 * Enable multi-pass processing for enhanced quality
 */
enable_multipass: boolean, 
/**
 * Number of processing passes (1-10, default: 1)
 */
pass_count: number, 
/**
 * Conservative detail level for first pass (higher thresholds)
 */
conservative_detail: number | null, 
/**
 * Aggressive detail level for second pass (lower thresholds)
 */
aggressive_detail: number | null, 
/**
 * Enable content-aware noise filtering
 */
noise_filtering: boolean, 
/**
 * Spatial sigma for bilateral noise filtering (higher = more smoothing, default: 2.0)
 */
noise_filter_spatial_sigma: number, 
/**
 * Range sigma for bilateral noise filtering (higher = less edge preservation, default: 50.0)
 */
noise_filter_range_sigma: number, 
/**
 * Enable reverse direction processing (R→L, B→T)
 */
enable_reverse_pass: boolean, 
/**
 * Enable diagonal direction processing (NW→SE, NE→SW)
 */
enable_diagonal_pass: boolean, 
/**
 * Threshold for directional strength - skip pass if not beneficial (0.0-1.0)
 */
directional_strength_threshold: number, 
/**
 * Maximum total processing time budget in milliseconds
 */
max_processing_time_ms: number, 
/**
 * Enable ETF/FDoG advanced edge detection (default: false for compatibility)
 */
enable_etf_fdog: boolean, 
/**
 * ETF radius for coherency computation (default: 4)
 */
etf_radius: number, 
/**
 * ETF iterations for coherency refinement (default: 4)
 */
etf_iterations: number, 
/**
 * ETF coherency threshold tau (default: 0.2)
 */
etf_coherency_tau: number, 
/**
 * FDoG sigma_s for structure Gaussian (default: 1.2)
 */
fdog_sigma_s: number, 
/**
 * FDoG sigma_c for context Gaussian (default: 2.0)
 */
fdog_sigma_c: number, 
/**
 * FDoG threshold tau (default: 0.90)
 */
fdog_tau: number, 
/**
 * NMS low threshold (default: 0.08)
 */
nms_low: number, 
/**
 * NMS high threshold (default: 0.16)
 */
nms_high: number, 
/**
 * Enable flow-guided polyline tracing (requires enable_etf_fdog=true, default: false)
 */
enable_flow_tracing: boolean, 
/**
 * Minimum gradient magnitude for tracing (default: 0.08)
 */
trace_min_grad: number, 
/**
 * Minimum coherency for tracing (default: 0.15)
 */
trace_min_coherency: number, 
/**
 * Maximum gap size for tracing in pixels (default: 4)
 */
trace_max_gap: number, 
/**
 * Maximum polyline length (default: 10_000)
 */
trace_max_len: number, 
/**
 * Enable Bézier curve fitting (requires enable_flow_tracing=true, default: false)
 */
enable_bezier_fitting: boolean, 
/**
 * Curvature penalty for Bézier fitting (default: 0.02)
 */
fit_lambda_curv: number, 
/**
 * Maximum fitting error tolerance (default: 0.8)
 */
fit_max_err: number, 
/**
 * Corner splitting angle threshold in degrees (default: 32.0)
 */
fit_split_angle: number, 
/**
 * Dot density threshold - minimum gradient strength required to place a dot (0.0 to 1.0)
 */
dot_density_threshold: number, 
/**
 * Minimum dot radius in pixels
 */
dot_min_radius: number, 
/**
 * Maximum dot radius in pixels
 */
dot_max_radius: number, 
/**
 * Whether to preserve original pixel colors in dot output
 */
dot_preserve_colors: boolean, 
/**
 * Whether to use adaptive sizing based on local variance
 */
dot_adaptive_sizing: boolean, 
/**
 * Background color tolerance for background detection (0.0 to 1.0)
 */
dot_background_tolerance: number, 
/**
 * Enable Poisson disk sampling for natural dot distribution (default: false)
 */
dot_poisson_disk_sampling: boolean, 
/**
 * Enable gradient-based sizing for dot scaling based on local image gradients (default: false)
 */
dot_gradient_based_sizing: boolean, 
/**
 * Amount of random variation in dot sizes (0.0 = no variation, 1.0 = maximum variation, default: 0.3)
 */
dot_size_variation: number, 
/**
 * Shape to use for dots (Circle, Square, Diamond, Triangle)
 */
dot_shape: DotShape, 
/**
 * Grid pattern for dot placement (Grid, Hexagonal, Random)
 */
dot_grid_pattern: GridPattern, 
/**
 * Enable adaptive thresholding for centerline backend (default: true)
 */
enable_adaptive_threshold: boolean, 
/**
 * Window size for adaptive thresholding (default: computed from detail level, 25-35 pixels)
 */
adaptive_threshold_window_size: number, 
/**
 * Sensitivity parameter k for Sauvola thresholding (default: computed from detail level, 0.3-0.5)
 */
adaptive_threshold_k: number, 
/**
 * Use optimized integral image implementation for adaptive thresholding (default: true)
 */
adaptive_threshold_use_optimized: boolean, 
/**
 * Enable EDT-based width modulation for centerline SVG strokes (default: false)
 */
enable_width_modulation: boolean, 
/**
 * Minimum branch length for centerline tracing in pixels (4-24, default: computed from detail level)
 */
min_branch_length: number, 
/**
 * Douglas-Peucker epsilon for path simplification (0.5-3.0, default: computed from detail level)
 */
douglas_peucker_epsilon: number, 
/**
 * Enable high-performance Distance Transform-based centerline algorithm (default: false)
 */
enable_distance_transform_centerline: boolean, 
/**
 * Number of superpixels to generate (20-1000, default: computed from detail level)
 */
num_superpixels: number, 
/**
 * SLIC compactness parameter - higher values create more regular shapes (1.0-50.0, default: 10.0)
 */
superpixel_compactness: number, 
/**
 * SLIC iterations for convergence (5-15, default: 10)
 */
superpixel_slic_iterations: number, 
/**
 * Superpixel cluster initialization pattern (default: hexagonal)
 */
superpixel_initialization_pattern: SuperpixelInitPattern, 
/**
 * Whether to fill superpixel regions with solid color (default: true)
 */
superpixel_fill_regions: boolean, 
/**
 * Whether to stroke superpixel region boundaries (default: true)
 */
superpixel_stroke_regions: boolean, 
/**
 * Whether to simplify superpixel boundaries using Douglas-Peucker (default: true)
 */
superpixel_simplify_boundaries: boolean, 
/**
 * Boundary simplification tolerance (0.5-3.0, default: 1.0)
 */
superpixel_boundary_epsilon: number, 
/**
 * Whether to preserve original colors in superpixel regions (default: true)
 */
superpixel_preserve_colors: boolean, 
/**
 * Whether to preserve original pixel colors in line tracing output (edge/centerline backends)
 */
line_preserve_colors: boolean, 
/**
 * Color sampling method for line tracing
 */
line_color_sampling: ColorSamplingMethod, 
/**
 * Color sampling accuracy (0.0 = fast, 1.0 = accurate, default: 0.7)
 */
line_color_accuracy: number, 
/**
 * Maximum number of colors per path segment (1-10, default: 3)
 */
max_colors_per_path: number, 
/**
 * Color similarity tolerance for clustering (0.0-1.0, default: 0.15)
 */
color_tolerance: number, 
/**
 * Enable color palette reduction/clustering (default: false)
 */
enable_palette_reduction: boolean, 
/**
 * Target number of colors for palette reduction (2-50, default: 16)
 */
palette_target_colors: number, 
/**
 * Enable background removal pre-processing (default: false)
 */
enable_background_removal: boolean, 
/**
 * Background removal strength/aggressiveness (0.0-1.0, default: 0.5)
 */
background_removal_strength: number, 
/**
 * Background removal algorithm selection (default: Auto)
 */
background_removal_algorithm: BackgroundRemovalAlgorithm, 
/**
 * Background removal threshold override (0-255, default: auto-calculated)
 */
background_removal_threshold: number | null, 
/**
 * Maximum image size (width or height) before automatic resizing (512-8192, default: 4096)
 */
max_image_size: number, 
/**
 * SVG coordinate precision in decimal places (0-4, default: 2)
 */
svg_precision: number, };
