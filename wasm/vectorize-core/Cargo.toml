[package]
name = "vectorize-core"
version = "0.1.0"
edition = "2021"
description = "Core trace-low vectorization algorithms for vec2art"
license = "MIT OR Apache-2.0"
repository = "https://github.com/your-org/vec2art"

[features]
default = ["parallel", "telemetry"]
wasm = ["single-threaded", "wasm-bindgen", "web-sys", "js-sys"]
parallel = ["rayon"]
telemetry = ["file-output"] 
single-threaded = []
file-output = []
# Multi-threading support for WASM with atomics
wasm-parallel = ["parallel", "wasm-bindgen", "web-sys", "js-sys"]

[dependencies]
# Core image processing
image = { workspace = true }
imageproc = { workspace = true }  # Canny edge detection for trace-low
rayon = { workspace = true, optional = true }
nalgebra = { workspace = true }  # Linear algebra for color space conversions

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = "1"
chrono = { version = "0.4", features = ["clock"] }

# Utilities
log = { workspace = true }
regex = { workspace = true }
once_cell = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true }
rand_distr = "0.4"

# WebAssembly support (optional)
wasm-bindgen = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true, features = ["Window", "Performance"] }
js-sys = { workspace = true, optional = true }

[dev-dependencies]
criterion = { workspace = true }
env_logger = { workspace = true }
tokio = { version = "1", features = ["rt", "macros"] }

[[bench]]
name = "vectorization_bench"
harness = false

[lib]
name = "vectorize_core"
crate-type = ["cdylib", "rlib"]