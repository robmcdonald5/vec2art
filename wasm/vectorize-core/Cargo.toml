[package]
name = "vectorize-core"
version = "0.1.0"
edition = "2025"
description = "Core trace-low vectorization algorithms for vec2art"
license = "SEE LICENSE IN ../../LICENSE"
repository = "https://github.com/robmcdonald5/vec2art"
authors = ["Joshua McDonald"]

[features]
# Default features for native builds (CLI tools)
default = ["single-threaded", "telemetry"]
# WASM feature set for single-threaded + Web Worker architecture
wasm = ["single-threaded", "wasm-bindgen", "web-sys", "js-sys"]
# Single-threaded processing (primary mode for WASM)
single-threaded = []
# Telemetry and logging support
telemetry = ["file-output"] 
file-output = []
# GPU acceleration support
gpu-acceleration = ["wgpu", "bytemuck", "pollster", "futures-channel"]
# TypeScript generation
generate-ts = ["ts-rs"]
# Enhanced error handling for robust WASM execution
enhanced-error-handling = []

[dependencies]
# Core image processing
image = { workspace = true }
imageproc = { workspace = true }  # Canny edge detection for trace-low
# Note: Rayon removed - using single-threaded core + Web Worker parallelism
nalgebra = { workspace = true }  # Linear algebra for color space conversions

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = "1"
chrono = { version = "0.4", features = ["clock", "serde"] }

# Utilities
log = { workspace = true }
regex = { workspace = true }
once_cell = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true }
rand_distr = "0.4"

# GPU acceleration (optional)
wgpu = { version = "26.0", optional = true }
bytemuck = { version = "1.14", optional = true }
pollster = { version = "0.3", optional = true }
futures-channel = { version = "0.3", optional = true }

# WebAssembly support (optional)
wasm-bindgen = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true, features = ["Window", "Performance"] }
js-sys = { workspace = true, optional = true }

# TypeScript generation (optional)
ts-rs = { version = "9.0", features = ["serde-compat"], optional = true }

[dev-dependencies]
criterion = { workspace = true }
env_logger = { workspace = true }
tokio = { version = "1", features = ["rt", "macros"] }

[[bench]]
name = "vectorization_bench"
harness = false

[lib]
name = "vectorize_core"
crate-type = ["cdylib", "rlib"]